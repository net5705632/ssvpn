import os
import requests
import base64
import json
import pyaes
import binascii
from datetime import datetime

# 安全读取环境变量
PHPSESSID = os.getenv('PHPSESSID')
d = os.getenv('DECRYPT_KEY_D').encode()
e = os.getenv('DECRYPT_KEY_E').encode()

def print_banner():
    banner = r"""
      H͜͡E͜͡L͜͡L͜͡O͜͡ ͜͡W͜͡O͜͡R͜͡L͜͡D͜͡ ͜͡E͜͡X͜͡T͜͡R͜͡A͜͡C͜͡T͜͡ ͜͡S͜͡S͜͡ ͜͡N͜͡O͜͡D͜͡E͜͡
    𓆝 𓆟 𓆞 𓆟 𓆝 𓆟 𓆞 𓆟 𓆝 𓆟 𓆞 𓆟
    Author : 𝐼𝑢
    Date   : {date}
    Version: 1.1
    𓆝 𓆟 𓆞 𓆟 𓆝 𓆟 𓆞 𓆟 𓆝 𓆟 𓆞 𓆟
    """.format(date=datetime.now().strftime('%Y-%m-%d'))
    print(banner)

def aes_decrypt(ciphertext, key, iv):
    decryptor = pyaes.AESModeOfOperationCBC(key, iv=iv)
    decrypted = decryptor.decrypt(ciphertext)
    return decrypted[:-decrypted[-1]]

def main():
    headers = {
        'Cookie': f'PHPSESSID={PHPSESSID}',
        'User-Agent': 'SkrKK/1.3.1 (iPhone; iOS 13.5; Scale/2.00)',
        # 其他 headers...
    }

    try:
        response = requests.post(
            'http://api.skrapp.net/api/serverlist',
            headers=headers,
            data={'data': '4265a9c353cd8624fd2bc7b5d75d2f18b1b5e66ccd37e2dfa628bcb8f73db2f14ba98bc6a1d8d0d1c7ff1ef0823b11264d0addaba2bd6a30bdefe06f4ba994ed'},
            timeout=15
        )
        response.raise_for_status()

        ciphertext = binascii.unhexlify(response.text.strip())
        decrypted = aes_decrypt(ciphertext, d, e)
        nodes = json.loads(decrypted)

        with open('ss.txt', 'w') as f:
            f.write("=== SS Node List ===\n\n")
            for node in nodes['data']:
                ss_url = f"aes-256-cfb:{node['password']}@{node['ip']}:{node['port']}"
                encoded = base64.b64encode(ss_url.encode()).decode()
                f.write(f"ss://{encoded}#{node['title']}\n")

    except Exception as e:
        print(f"Error: {str(e)}")
        exit(1)

if __name__ == "__main__":
    print_banner()
    main()
